{"version":3,"sources":["Components/SearchApi.js","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Modal/Modal.js","App.js","index.js"],"names":["axios","defaults","baseURL","exportObject","fetchImages","a","searchQuery","page","get","then","response","data","hits","Searchbar","onChangeQuery","useState","setSearchQuery","className","onSubmit","e","preventDefault","length","type","autoComplete","autoFocus","placeholder","value","onChange","event","currentTarget","ImageGalleryItem","url","onShowLargeImg","onClick","src","alt","ImageGallery","images","showLargeImg","path","map","largeImageURL","webformatURL","id","Button","title","onButtonClick","useEffect","window","scrollTo","top","document","documentElement","scrollHeight","behavior","modalRoot","querySelector","Modal","children","onClose","handleKeydown","code","addEventListener","removeEventListener","createPortal","target","App","setImages","setPage","setPageImages","isLoading","setIsLoading","error","setError","modalUrl","setModalUrl","showModal","setShowModal","options","imagesApi","prevImages","p","catch","message","finally","toggleModal","query","style","color","textAlign","fontSize","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"6QAGAA,IAAMC,SAASC,QAAU,2BACzB,IAQeC,EADM,CAAEC,YAPN,uCAAG,mCAAAC,EAAA,iEAASC,mBAAT,MAAuB,GAAvB,MAA2BC,YAA3B,MAAkC,EAAlC,oBACXP,IACJQ,IADI,aAEGF,EAFH,iBAEuBC,EAFvB,gBAJG,qCAIH,yDAIJE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,SALhB,2CAAH,uD,OCFF,SAASC,EAAT,GAAuC,IAAlBC,EAAiB,EAAjBA,cAChC,EAAsCC,mBAAS,IAA/C,mBAAOT,EAAP,KAAoBU,EAApB,KAgBI,OACI,wBAAQC,UAAU,YAAlB,SACI,uBAAMA,UAAU,aAAaC,SAXpB,SAAAC,GACjBA,EAAEC,iBAEyB,IAAvBd,EAAYe,QACZP,EAAcR,IAOV,UACI,wBAAQgB,KAAK,SAASL,UAAU,oBAAhC,SACI,sBAAMA,UAAU,0BAAhB,wBAGJ,uBACAA,UAAU,mBACVK,KAAK,OACLC,aAAa,MACbC,WAAS,EAACC,YAAY,2BACtBC,MAAOpB,EACPqB,SA1BK,SAACC,GAClBZ,EAAeY,EAAMC,cAAcH,eCJ3C,IAgBeI,EAhBU,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAIC,EAAP,EAAOA,eAAP,OACvB,oBAAIf,UAAU,mBAAd,SACE,qBACEgB,QAASD,EACTE,IAAKH,EACLI,IAAI,GACJlB,UAAU,8BCwBDmB,EA5BM,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQL,EAAsB,EAAtBA,eACxBM,EAAgB,SAAAC,GACpBP,EAAgBO,IAEpB,OACE,oBAAItB,UAAU,eAAd,SACGoB,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,cAAcC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,GAA/B,OACV,cAAC,EAAD,CACEZ,IAAKW,EAELV,eAAgB,kBAAMM,EAAaG,KAD9BE,SCTE,SAASC,EAAT,GAA4C,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,cAQrC,OAPAC,qBAAU,WACNC,OAAOC,SAAS,CACZC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,aAEf,IAGH,qBAAKrC,UAAU,iBAAf,SACE,wBAAQK,KAAK,SAASL,UAAU,SAASgB,QAASa,EAAlD,SACGD,MCbT,IAAMU,EAAYJ,SAASK,cAAc,eAqC1BC,EAlCG,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACvBZ,qBAAU,WACR,IAAMa,EAAgB,SAACzC,GACN,WAAXA,EAAE0C,MACJF,KAMJ,OAFAX,OAAOc,iBAAiB,UAAWF,GAE5B,WACLZ,OAAOe,oBAAoB,UAAWH,MAEvC,CAACD,IAUJ,OAAOK,uBACH,qBAAK/C,UAAU,UAAUgB,QARF,SAAAd,GACvBA,EAAEU,gBAAkBV,EAAE8C,QACtBN,KAMA,SACI,qBAAK1C,UAAU,QAAf,SACCyC,MAGLH,I,uBCxBG,SAASW,IAEpB,MAA4BnD,mBAAS,IAArC,mBAAOsB,EAAP,KAAe8B,EAAf,KACA,EAAwBpD,mBAAS,GAAjC,mBAAOR,EAAP,KAAa6D,EAAb,KACA,EAAoCrD,mBAAS,IAA7C,mBAAmBsD,GAAnB,WACA,EAAsCtD,mBAAS,IAA/C,mBAAOT,EAAP,KAAoBU,EAApB,KACA,EAAkCD,oBAAS,GAA3C,mBAAOuD,EAAP,KAAkBC,EAAlB,KACA,EAA0BxD,mBAAS,MAAnC,mBAAOyD,EAAP,KAAcC,EAAd,KACA,EAAgC1D,mBAAS,IAAzC,mBAAO2D,EAAP,KAAiBC,EAAjB,KACA,EAAkC5D,oBAAS,GAA3C,mBAAO6D,EAAP,KAAkBC,EAAlB,KAGA9B,qBAAU,WACHzC,GAGLF,MACC,CAACE,IAEJ,IAOMF,EAAc,WAElB,IAAM0E,EAAU,CAAExE,cAAaC,QAC/BgE,GAAa,GAEjBQ,EACC3E,YAAY0E,GACZrE,MAAK,SAAA4B,GACJ8B,GAAU,SAAAa,GAAU,4BAAQA,GAAR,YAAuB3C,OAC3C+B,GAAQ,SAAAa,GAAC,OAAIA,EAAI,KACjBZ,EAAc,YAAIhC,IACI,IAAlBA,EAAOhB,QACToD,EAAS,iDAEZS,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAMW,YAC9BC,SAAQ,kBAAMb,GAAa,OAItBc,EAAc,WAChBR,GAAeD,IASjB,OACE,qCACE,cAAC/D,EAAD,CAAWC,cAtCO,SAACwE,GACrBtE,EAAesE,GACflB,EAAQ,GACRD,EAAU,IACVM,EAAS,SAmCND,GACC,oBAAGe,MAAO,CAAEC,MAAO,MAAOC,UAAW,SAAUC,SAAU,QAAzD,4BACkBlB,KAGpB,cAAC,EAAD,CAAcnC,OAAQA,EAAQL,eAdJ,SAACO,GAC9BoC,EAAYpC,GACb8C,OAaMf,GAAa,cAAC,IAAD,CAAQhD,KAAK,OAAOkE,MAAM,UAAUG,OAAQ,GAAIC,MAAO,KAGnEvD,EAAOhB,OAAS,IAAMiD,GACvB,cAAC1B,EAAD,CAAQC,MAAM,YAAYC,cAAe1C,IAG1CwE,GACC,cAAC,EAAD,CAAOjB,QAAS0B,EAAhB,SACE,qBAAKnD,IAAKwC,EAAUvC,IAAI,UC/EpC0D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5C,SAAS6C,eAAe,W","file":"static/js/main.43960a7d.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst KEY = '21833579-dbfb00598a636f5e3a6a2045e';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst fetchImages = async ({ searchQuery = '', page = 1 }) => {\r\n  return axios\r\n    .get(\r\n      `?q=${searchQuery}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\nconst exportObject = { fetchImages };\r\nexport default exportObject;","import React, { useState } from 'react';\r\n\r\nexport default function Searchbar({ onChangeQuery }) {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setSearchQuery(event.currentTarget.value);      \r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault(); \r\n\r\n        if (searchQuery.length !== 0) {\r\n            onChangeQuery(searchQuery)     \r\n        }  \r\n    }\r\n\r\n    \r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\"> Search </span>\r\n                    </button>\r\n\r\n                    <input \r\n                    className=\"SearchForm-input\" \r\n                    type=\"text\"\r\n                    autoComplete=\"off\" \r\n                    autoFocus placeholder=\"Search images and photos\" \r\n                    value={searchQuery} \r\n                    onChange={handleChange}/>\r\n                </form>\r\n            </header>\r\n        )\r\n    \r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ url,onShowLargeImg }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      onClick={onShowLargeImg}\r\n      src={url}\r\n      alt=''\r\n      className=\"ImageGalleryItem-image\"\r\n      \r\n    />\r\n  </li>\r\n);\r\nImageGalleryItem.propTypes = {\r\n  onShowLargeImg: PropTypes.func.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\n\r\nconst ImageGallery = ({ images, onShowLargeImg  }) => {\r\n  const showLargeImg  = path => {\r\n    onShowLargeImg (path);\r\n  };\r\nreturn (\r\n  <ul className=\"ImageGallery\">\r\n    {images.map(({ largeImageURL,webformatURL, id }) => (\r\n      <ImageGalleryItem\r\n        url={webformatURL}\r\n        key={id}\r\n        onShowLargeImg={() => showLargeImg(largeImageURL)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  onShowLargeImg : PropTypes.func.isRequired,\r\nimages: PropTypes.arrayOf(\r\n  PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n  }),\r\n).isRequired,\r\n};\r\n\r\nexport default ImageGallery;","  \r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Button ({ title, onButtonClick }) {\r\n    useEffect(()=>{\r\n        window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n    }, []);\r\n\r\n    return ( \r\n    <div className=\"ButtonPosition\">\r\n      <button type='button' className=\"Button\" onClick={onButtonClick}>\r\n        {title}\r\n      </button>\r\n    </div>\r\n    )\r\n  \r\n};\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  onButtonClick: PropTypes.func.isRequired,\r\n};\r\n\r\n","import React, { useEffect} from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\n\r\n    const Modal = ({ children, onClose }) => {\r\n        useEffect(() => {\r\n          const handleKeydown = (e) => {\r\n            if (e.code === \"Escape\") {\r\n              onClose();\r\n            }\r\n          };\r\n      \r\n          window.addEventListener(\"keydown\", handleKeydown);\r\n      \r\n          return () => {\r\n            window.removeEventListener(\"keydown\", handleKeydown);\r\n          };\r\n        }, [onClose]);\r\n  \r\n\r\n        const handleOverlayClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            onClose();\r\n        }\r\n    }\r\n\r\n\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={handleOverlayClick}>\r\n                <div className=\"Modal\">\r\n                {children}\r\n                </div>\r\n            </div>, \r\n            modalRoot,\r\n        );\r\n    \r\n}\r\n\r\nexport default Modal;","import React, { useState, useEffect } from 'react';// import React, { Component } from 'react';\nimport imagesApi from './Components/SearchApi';\n\nimport Searchbar from './Components/Searchbar';\nimport ImageGallery from './Components/ImageGallery';\nimport Button from './Components/Button';\nimport Modal from './Components/Modal';\nimport Loader from 'react-loader-spinner';\n\nimport './App.css';\n\nexport default function App() {\n  \n    const [images, setImages] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageImages, setPageImages] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [modalUrl, setModalUrl] = useState('');\n    const [showModal, setShowModal] = useState(false);\n    // modalUrl: ''\n\n    useEffect(() => {\n      if (!searchQuery) {\n        return;\n      }\n      fetchImages();\n    }, [searchQuery]);\n\n    const onChangeQuery = (query) => {\n      setSearchQuery(query);\n      setPage(1);\n      setImages([]);\n      setError(null);\n    }\n  \n    const fetchImages = () => {\n    \n      const options = { searchQuery, page };\n      setIsLoading(true);\n \n  imagesApi\n  .fetchImages(options)\n  .then(images => {\n    setImages(prevImages => [...prevImages, ...images]);\n    setPage(p => p + 1);\n    setPageImages([...images]);\n    if (images.length === 0) {\n      setError('Nothing was find by your query. Try again.');\n    }})\n  .catch(error => setError(error.message))\n  .finally(() => setIsLoading(false));\n};\n\n\n  const toggleModal = () => {\n      setShowModal (!showModal);\n  }\n\n  const onClickImageGalleryItem = (path) => {\n     setModalUrl(path);\n    toggleModal();\n  }\n  \n\n    return (\n      <>\n        <Searchbar onChangeQuery={onChangeQuery} />\n        {error && (\n          <p style={{ color: 'red', textAlign: 'center', fontSize: '20px' }}>\n            This is error: {error}\n          </p>\n        )}\n        <ImageGallery images={images} onShowLargeImg ={onClickImageGalleryItem}/>\n        { isLoading && <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} /> }       \n\n\n          {images.length > 0 && !isLoading && (\n          <Button title=\"Load More\" onButtonClick={fetchImages} />\n        )}\n\n        {showModal && (\n          <Modal onClose={toggleModal}>\n            <img src={modalUrl} alt=\"\" />\n          </Modal>\n        )}\n      </>      \n    )    \n   \n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}